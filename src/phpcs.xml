<?xml version="1.0"?>
<ruleset name="Meanify Code Style">
    <description>Custom PHP_CodeSniffer rules for Meanify projects.</description>

    <!-- ........................................................................................................... -->
    <!-- Paths to analyses Standards -->
    <!-- ........................................................................................................... -->

    <file>../../../../app</file>
    <file>../../../../config</file>
    <file>../../../../routes</file>
    <file>../../../../tests</file>


    <!-- ........................................................................................................... -->
    <!-- Ignore paths  -->
    <!-- ........................................................................................................... -->

    <exclude-pattern>../../../../node_modules/*</exclude-pattern>
    <exclude-pattern>../../../../vendor/*</exclude-pattern>
    <exclude-pattern>../../../../tests/Feature/*</exclude-pattern>
    <exclude-pattern>../../../../tests/Unit/*</exclude-pattern>
    <exclude-pattern>../../../../storage/*</exclude-pattern>
    <exclude-pattern>../../../../bootstrap/cache/*</exclude-pattern>


    <!-- ........................................................................................................... -->
    <!-- Meanify extra standards -->
    <!-- ........................................................................................................... -->
    <rule ref="Review"/>


    <!-- ........................................................................................................... -->
    <!-- PEAR Standards -->
    <!-- ........................................................................................................... -->

    <rule ref="PEAR">
        <!-- Ignore rules -->
        <exclude name="PEAR.Functions.FunctionCallSignature.Indent"/>
        <exclude name="PEAR.ControlStructures.ControlSignature.Found"/>
        <exclude name="PEAR.ControlStructures.MultiLineCondition.NewlineBeforeOpenBrace"/>
        <exclude name="PEAR.Commenting.ClassComment"/>
        <exclude name="PEAR.Commenting.InlineComment"/>
        <exclude name="PEAR.Commenting.FileComment.Missing"/>
        <exclude name="PEAR.Functions.FunctionCallSignature.ContentAfterOpenBracket"/>
        <exclude name="PEAR.Functions.FunctionCallSignature.CloseBracketLine"/>
        <exclude name="PEAR.Functions.FunctionDeclaration.BraceOnSameLine"/>
        <exclude name="PEAR.Functions.FunctionDeclaration.BraceOnNewLine"/>
        <exclude name="PEAR.WhiteSpace.ScopeClosingBrace.Line"/>
        <exclude name="PEAR.Commenting.FunctionComment.MissingParamComment"/>
        <exclude name="PEAR.Commenting.FunctionComment.Missing"/>
        <exclude name="PEAR.Commenting.FunctionComment.MissingReturn"/>
    </rule>


    <!-- ........................................................................................................... -->
    <!-- Generic Standards -->
    <!-- ........................................................................................................... -->


    <!-- Formatting -->
    <rule ref="Generic.Formatting.DisallowMultipleStatements" />
    <rule ref="Generic.Formatting.MultipleStatementAlignment" />
    <rule ref="Generic.Formatting.SpaceAfterCast" />
    <rule ref="Generic.Formatting.SpaceBeforeCast" />

    <!-- Functions -->
    <rule ref="Generic.Functions.FunctionCallArgumentSpacing" />
    <rule ref="Generic.Functions.OpeningFunctionBraceBsdAllman" />
    <rule ref="Generic.PHP.DeprecatedFunctions" />
    <rule ref="Generic.PHP.DisallowAlternativePHPTags" />
    <rule ref="Generic.PHP.DisallowRequestSuperglobal" />
    <rule ref="Generic.PHP.DisallowShortOpenTag" />
    <rule ref="Generic.PHP.LowerCaseConstant" />
    <rule ref="Generic.PHP.LowerCaseKeyword" />
    <rule ref="Generic.PHP.LowerCaseType" />
    <rule ref="Generic.PHP.SAPIUsage" />
    <rule ref="Generic.PHP.Syntax" />
    <rule ref="Generic.Strings.UnnecessaryStringConcat" />
    <rule ref="Generic.VersionControl.GitMergeConflict" />
    <rule ref="Generic.WhiteSpace.ArbitraryParenthesesSpacing" />
    <rule ref="Generic.WhiteSpace.ScopeIndent" />
    <rule ref="Generic.WhiteSpace.SpreadOperatorSpacingAfter" />

    <!-- NamingConventions -->
    <rule ref="Generic.NamingConventions">
        <exclude name="Generic.NamingConventions.CamelCapsFunctionName.ScopeNotCamelCaps"/>
    </rule>

    <!-- Functions -->
    <rule ref="Generic.Functions">
        <exclude name="Generic.Functions.OpeningFunctionBraceBsdAllman.BraceOnSameLine"/>
        <exclude name="Generic.Functions.OpeningFunctionBraceKernighanRitchie.BraceOnNewLine"/>
    </rule>

    <!-- Set constant with uppercase -->
    <rule ref="Generic.PHP.LowerCaseConstant"/>

    <!-- Max chars per line -->
    <rule ref="Generic.Files.LineLength">
        <properties>
            <property name="lineLimit" value="120"/>
            <property name="absoluteLineLimit" value="0"/>
        </properties>
    </rule>

    <!-- One Class per file -->
    <rule ref="Generic.Files.OneClassPerFile" />
    <rule ref="Generic.Files.OneInterfacePerFile" />
    <rule ref="Generic.Files.OneObjectStructurePerFile" />
    <rule ref="Generic.Files.OneTraitPerFile" />

    <!-- Disabled functions -->
    <rule ref="Generic.PHP.ForbiddenFunctions">
        <properties>
            <property name="forbiddenFunctions" type="array">
                <element key="sizeof" value="count"/>
                <element key="delete" value="unset"/>
                <element key="print" value="echo"/>
                <element key="die" value="dd"/>
                <element key="create_function" value="anonymous function"/>
            </property>
        </properties>
    </rule>

    <!-- Doc comment -->
    <rule ref="Generic.Commenting.DocComment">
        <exclude name="Generic.Commenting.DocComment.MissingShort"/>
        <exclude name="Generic.Commenting.DocComment.TagValueIndent"/>
    </rule>


    <!-- ........................................................................................................... -->
    <!-- PSR2 Standards -->
    <!-- ........................................................................................................... -->


    <!-- Disabled private functions with "_" at first -->
    <rule ref="PSR2.Methods.MethodDeclaration.Underscore">
        <type>error</type>
    </rule>
    <rule ref="PSR2.Classes.PropertyDeclaration.Underscore">
        <type>error</type>
    </rule>


    <!-- ........................................................................................................... -->
    <!-- PSR12 Standards -->
    <!-- ........................................................................................................... -->

    <!-- Check if php file has open tag -->
    <rule ref="PSR12.Files.OpenTag" />
</ruleset>